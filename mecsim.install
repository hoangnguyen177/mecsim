<?php
/**
 * @file
 * Install and uninstall functions for the mecsim module.
 *
 * This file contains the functions required to perform install and
 * uninstall operations.
 */

/**
 * Implements hook_schema().
 *
 * This defines the database table which will hold the example item info.
 */
function mecsim_schema() {
  $schema['mecsim'] = array(
    'description' => 'store entries for mecsim experiments created with this portal.',
    'fields' => array(
      'exp_number' => array(
        'description' => 'The primary identifier for each experiment.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'A name for this experiment.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'status of thte experiment in the last update.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'description' => 'A description for this item.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      //this cannot null
      //for those experiments not submitted yet
      'nimrodid' => array(
        'description' => 'id of the expeirment in nimrod database.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      //schema API does not support date type
      //use int to store timestamp: http://eureka.ykyuen.info/2012/06/01/drupal-7-create-a-datetime-field-in-hook_schema-2/
      'creation_time' => array(
        'description' => 'creation time.',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      //folder in the portal's machine
      'exp_location' => array(
        'description' => 'location of the experiment.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
      ),
      //user name of the creator
      'owner' => array(
        'description' => 'username of the owner.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 50,
      ),
    ),
    'primary key' => array('exp_number'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 *
 * This datafills the example item info which will be used in the example.
 */
function mecsim_install() {
  // Ensure translations don't break at install time.
  $t = get_t();
  // Insert some values into the database.
  $rows = array(
    array(
      'name' => $t('Experiment One'),
      'description' => $t('The first item'),
      'nimrodid' => 1,
      'creation_time' => REQUEST_TIME, 
      'status' => 0,
      'owner' => 'hoangnguyen177',
    ),
    array(
      'name' => $t('Experiment two'),
      'description' => $t('The second experiment description. A long description'),
      'nimrodid' => 2,
      'creation_time' => REQUEST_TIME, 
      'status' => 0,
      'owner' => 'hoangnguyen177',
    ),
    array(
      'name' => $t('Experiment three'),
      'description' => $t('The third experiment description'),
      'nimrodid' => 3,
      'creation_time' => REQUEST_TIME, 
      'status' => 0,
      'owner' => 'user1',
    ),
  );
  if (db_table_exists('mecsim')) {
    foreach ($rows as $row) {
      db_insert('mecsim')->fields($row)->execute();
    }
  }
}

/**
 * Implements hook_uninstall().
 *
 * This removes the example data when the module is uninstalled.
 */
function mecsim_uninstall() {
  db_drop_table('mecsim');
}
